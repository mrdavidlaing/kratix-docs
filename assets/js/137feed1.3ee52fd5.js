"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[1038],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={title:"Resource Status",sidebar_label:"Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field"},i="Status",s={unversionedId:"main/reference/resources/status",id:"main/reference/resources/status",title:"Resource Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field",source:"@site/docs/main/05-reference/05-resources/04-status.md",sourceDirName:"main/05-reference/05-resources",slug:"/main/reference/resources/status",permalink:"/docs/main/reference/resources/status",draft:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/05-resources/04-status.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Resource Status",sidebar_label:"Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field"},sidebar:"mainSidebar",previous:{title:"Deleting",permalink:"/docs/main/reference/resources/delete"},next:{title:"StateStores",permalink:"/docs/main/reference/statestore/intro"}},l={},c=[{value:"Conditions",id:"conditions",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"status"},"Status"),(0,a.kt)("p",null,"As part of your ",(0,a.kt)("inlineCode",{parentName:"p"},"configure")," Pipeline you can optionally send information about the Resource\nback to the resource requester by writing information to\n",(0,a.kt)("inlineCode",{parentName:"p"},"/kratix/metadata/status.yaml"),". The file can contain arbitrary key values, with the\n",(0,a.kt)("inlineCode",{parentName:"p"},"message")," key being a special key that is communicated back to the user when\nrunning ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get <resource-request>"),". For example if the Pipeline container wrote the\nfollowing to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/kratix/metadata/status.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"message: Resource provisioned with database size 10Gb\nconnectionDetails:\n  host: example.com\n  dbName: root\n")),(0,a.kt)("p",null,"Kratix would pickup the status and apply it back to the Resource. The\nuser would see the following when using ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," the Resource details:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get database\nNAME                   STATUS\nexample                Resource provisioned with database size 10Gb\n")),(0,a.kt)("p",null,"And if the requester inspected the full status output using ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get database example -o yaml"),", they would see all additional status keys:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: example.promise.syntasso.io/v1\nkind: Database\n# ...\nstatus:\n  message: Resource provisioned with database size 10Gb\n  connectionDetails:\n    host: example.com\n    dbName: root\n")),(0,a.kt)("p",null,"Status provides a simple way to communicate information back to the resource\nrequester. Kratix will automatically inject the required fields for status into\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"api"),", you do not have to manually add these fields."),(0,a.kt)("p",null,"Status can also be used as a method of communicating information back to the\n",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," pipeline, such as the name of any external resources imperatively\ncreated in the pipeline that need to be deleted as part of the delete pipeline"),(0,a.kt)("h2",{id:"conditions"},"Conditions"),(0,a.kt)("p",null,"Kratix follows the Kubernetes convention of using\n",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-states"},"conditions"),"\nto convey the status of a resource and to allow programmatic interactions. When\na Resource is requested the ",(0,a.kt)("inlineCode",{parentName:"p"},"PipelineCompleted")," condition will be set. The\n",(0,a.kt)("inlineCode",{parentName:"p"},"status")," for the Pipeline will be ",(0,a.kt)("inlineCode",{parentName:"p"},"False")," until the Pipeline is completed. For\nexample when a Resource is requested for the first time the status will\nlook like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'status:\n  conditions:\n    - lastTransitionTime: "2023-03-07T15:50:22Z"\n      message: Pipeline has not completed\n      reason: PipelineNotCompleted\n      status: "False"\n      type: PipelineCompleted\n')),(0,a.kt)("p",null,"once the Pipeline has been completed it will look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'status:\n  conditions:\n    - lastTransitionTime: "2023-03-07T15:50:30Z"\n      message: Pipeline completed\n      reason: PipelineExecutedSuccessfully\n      status: "True"\n      type: PipelineCompleted\n')),(0,a.kt)("p",null,"Conditions can be used by external systems to programmatically check when a\nResource Workflow has been completed. ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," also has built-in support\nfor waiting for a condition to be met. For example after requesting a Resource\na user can run the following to have the CLI wait for the Workflow to be\ncompleted:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl wait redis/example --for=condition=PipelineCompleted --timeout=60s\n")),(0,a.kt)("p",null,"Once the condition is ",(0,a.kt)("inlineCode",{parentName:"p"},"True")," the command will exit."))}p.isMDXComponent=!0}}]);