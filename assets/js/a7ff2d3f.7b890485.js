"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[8150],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(a),k=r,d=u["".concat(c,".").concat(k)]||u[k]||m[k]||o;return a?n.createElement(d,i(i({ref:t},p),{},{components:a})):n.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=k;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},6022:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),o=a(4996);const i={description:"Documentation for using Backstage with Kratix",title:"Backstage",sidebar_label:"Backstage",id:"intro"},s=void 0,c={unversionedId:"main/reference/backstage/intro",id:"main/reference/backstage/intro",title:"Backstage",description:"Documentation for using Backstage with Kratix",source:"@site/docs/main/05-reference/07-backstage/01-backstage.md",sourceDirName:"main/05-reference/07-backstage",slug:"/main/reference/backstage/intro",permalink:"/docs/main/reference/backstage/intro",draft:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/07-backstage/01-backstage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"Documentation for using Backstage with Kratix",title:"Backstage",sidebar_label:"Backstage",id:"intro"},sidebar:"mainSidebar",previous:{title:"BucketStateStore",permalink:"/docs/main/reference/statestore/bucketstatestore"},next:{title:"Multi-cluster management",permalink:"/docs/main/reference/multicluster-management"}},l={},p=[{value:"What",id:"what",level:2},{value:"Why",id:"why",level:2},{value:"How",id:"how",level:2},{value:"Setting up Kratix with Backstage",id:"setting-up-kratix-with-backstage",level:3},{value:"Create Backstage Resources with Kratix",id:"create-backstage-resources-with-kratix",level:3}],u={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://backstage.io/"},"Backstage")," is a framework for building developer portals. Kratix is a framework for building platforms. The two were almost designed to work perfectly with one another.")),(0,r.kt)("img",{align:"right",src:(0,o.Z)("/img/k+backstage.png"),alt:"Kratix logo and Backstage logo"}),(0,r.kt)("h2",{id:"what"},"What"),(0,r.kt)("p",null,"Backstage and Kratix both believe that the most powerful platforms must be built by each organisation. While a platform needs to be custom built, both tools also encourage building on top of community provided support where possible. Both tools provide a framework for platform engineers that encourages user experience front and center."),(0,r.kt)("p",null,"Backstage is a framework that enables GUIs to be declaratively created with the aim of unifying infrastructure tooling, services, and documentation to produce a great developer experience. Backstage is un-opinionated and decoupled from how you drive your platform infrastructure."),(0,r.kt)("p",null,"Kratix enables platform teams to declare platform APIs that orchestrates workloads across your infrastructure. Kratix does not come with a packaged GUI."),(0,r.kt)("h2",{id:"why"},"Why"),(0,r.kt)("p",null,"This divide between GUI and API makes Backstage and Kratix the perfect package."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Decoupled architecture:")),(0,r.kt)("p",{parentName:"li"},"GUI architectures shine when their responsibility is limited to the UX experience. Rather than define your platform orchestartation in Backstage directly, you can have Backstage call the Kratix API which provides easier portability across GUIs, alternative experiences for more CLI driven users, and easier refactoring of platfom implementation due to stable API definitions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Auto-populated GUI:")),(0,r.kt)("p",{parentName:"li"},"Backstage GUIs must be declared: this is toil for the platform. Kratix can reduce this toil by integrating ",(0,r.kt)("a",{parentName:"p",href:"/docs/main/reference/promises/intro"},"Promises")," with Backstage by default. In addition, these GUIs can diverge from platform offerings if they are managed separately from the backend implementations. Promises that defined the API and the Backstage GUI at the same time provide automatic support for iterations on your offerings."))),(0,r.kt)("h2",{id:"how"},"How"),(0,r.kt)("p",null,"Integrating Backstage with Kratix is simple. Point Backstage at the Kratix platform cluster and that's it. Kratix will then build the Backstage views as Promises are loaded into Kratix, and Resources are requested by users of the platform."),(0,r.kt)("p",null,"Declarative UIs by default with Kratix:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Backstage Catalog is automatically populated when Kratix Promises are applied."),(0,r.kt)("li",{parentName:"ul"},"Templates for Promises are automatically created when Promises are loaded. Giving consumers of the platform simple, predictable UX to create Resources from the Promises they require. This could be entire paved-path environments, or simply instances of services developers need. See the ",(0,r.kt)("a",{parentName:"li",href:"https://www.kratix.io/marketplace"},"Marketplace")," our Promises."),(0,r.kt)("li",{parentName:"ul"},"Due to Kratix's powerful GitOps abstractions, the Backstage configuration data lives outside of Backstage, leaving your Kratix-driven Backstage ephemeral in nature. If your Backstage dies, no problem, redeploy it and your views will be automatically brought back to life by Kratix.")),(0,r.kt)("br",null),(0,r.kt)("div",{style:{"text-align":"center"}},(0,r.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/wj5VaXYTvrg",title:"Use Kratix to provide on-demand services through a Backstage UI",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"setting-up-kratix-with-backstage"},"Setting up Kratix with Backstage"),(0,r.kt)("p",null,"Backstage supports reading objects from S3-Compatible Blobstores, which\nKratix also supports writing to. You can create a\n",(0,r.kt)("a",{parentName:"p",href:"/docs/main/reference/statestore/bucketstatestore"},"BucketStateStore")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/main/reference/destinations/intro"},"Destination")," that points to the\ndirectory that Backstage has been configured to watch. For example:"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"BucketStateStore"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"BucketStateStore",BucketStateStore:!0},"\napiVersion: platform.kratix.io/v1alpha1\nkind: BucketStateStore\nmetadata:\n  name: backstage\nspec:\n  bucketName: kratix\n  endpoint: s3.amazonaws.com\n  insecure: false\n  path: backstage/\n  secretRef:\n    name: s3-credentials\n    namespace: default\n")),(0,r.kt)("p",null,"And a ",(0,r.kt)("inlineCode",{parentName:"p"},"backstage")," Destination:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apiVersion: platform.kratix.io/v1alpha1\nkind: Destination\nmetadata:\n  labels:\n    environment: backstage\n  name: backstage\nspec:\n  stateStoreRef:\n    kind: BucketStateStore\n    name: backstage\n")),(0,r.kt)("p",null,"Kratix is now setup to enable Promises to write to this location. Backstage\nneeds to be configured to read from it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"integrations:\n  awsS3:\n    - endpoint: 'http://s3.amazonaws.com'\n      s3ForcePathStyle: true\n      accessKeyId: ${AWS_ACCESS_KEY_ID}\n      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}\ncatalog:\n  providers:\n    awsS3:\n      kratix-bucket:\n        bucketName: kratix\n        prefix: backstage/\n        region: us-east-2\n        schedule:\n          frequency: {minutes: 1}\n          timeout: {seconds: 20}\n\n")),(0,r.kt)("p",null,"Backstage is now configured to load any Backstage documents, such as templates\nand components, that Kratix writes to the bucket."),(0,r.kt)("h3",{id:"create-backstage-resources-with-kratix"},"Create Backstage Resources with Kratix"),(0,r.kt)("p",null,"Kratix ",(0,r.kt)("a",{parentName:"p",href:"../workflows"},"workflows")," allow Promise authors to define pipelines that\nrun for a ",(0,r.kt)("a",{parentName:"p",href:"/docs/main/reference/resources/workflows"},"Resource")," or\n",(0,r.kt)("a",{parentName:"p",href:"/docs/main/reference/promises/workflows"},"Promise")," for various different lifecycles.\nThese workflows can output documents of ",(0,r.kt)("em",{parentName:"p"},"any type"),", and a single workflow can\nschedule to ",(0,r.kt)("a",{parentName:"p",href:"../multicluster-management#dynamic"},"multiple destinations"),". This\nenables Promise authors in a single workflow to both output any desired\nresources, like Kubernetes, alongside other types of resources, in this case\nBackstage. "),(0,r.kt)("p",null,"The Promise workflow can be used to output a component and template for the\nPromise at install time, and then the Resource workflow can output a component\nto describe what has been provisioned."),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/syntasso/kratix-marketplace/tree/main/kafka"},"Kafka Promise"),"\ndemonstrates this."),(0,r.kt)("p",null,"The Promise workflow for Kafka outputs the Kafka operator for deployment to a\nKubernetes cluster (the default scheduling for this Promise) and then outputs a\nComponent and Template separately for backstage and specifies the scheduling to\nensure it goes to the Backstage destination:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env sh\n\nset -x\n\n\ncp -r /tmp/transfer/dependencies/* /kratix/output/\ncp -r /tmp/transfer/backstage /kratix/output\n\necho """\n- directory: backstage\n  matchLabels:\n    environment: backstage\n""" >> /kratix/metadata/destination-selectors.yaml\n')),(0,r.kt)("p",null,"The sample Component and Template can be found\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/syntasso/kratix-marketplace/blob/main/kafka/internal/configure-promise-pipeline/resources/backstage/backstage.yaml"},"here")),(0,r.kt)("p",null,"Kratix will write the Backstage resources to the Backstage Destination, where\nBackstage will then read and populate the UI with:"),(0,r.kt)("img",{src:(0,o.Z)("/img/docs/backstage-promise.png")}),(0,r.kt)("p",null,'A user can then make a request by clicking "Create" in the top right, selecting\nthe Kafka form and filling out the details:'),(0,r.kt)("img",{src:(0,o.Z)("/img/docs/backstage-template.png")}),(0,r.kt)("p",null,"The last step is to ensure that after a user has requested a Resource that a\nComponent in Backstage appears to resemeble it. Kafka does the in-lined in the\nResource workflow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env sh\n\nset -eux\n\n# Read current values from the provided resource request\nexport name="$(yq eval \'.metadata.name\' /kratix/input/object.yaml)"\n\n...\n\nmkdir -p /kratix/output/backstage/\n\ncat <<EOF > /kratix/output/backstage/component.yaml\napiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  name: kafka-${name}\n  title: "Kafka ${name}"\n  description: Kafka created via the Promise\n  annotations:\n    backstage.io/kubernetes-label-selector: kafka=${name}\n  links:\n  - url: https://github.com/syntasso/kratix-marketplace\n    title: Support\n    icon: help\nspec:\n  type: service\n  lifecycle: production\n  owner: kratix-worker\n  dependsOn:\n    - component:default/kafka\n  providesApis:\n    - kafka-promise-api\nEOF\n\necho """\n- directory: backstage\n  matchLabels:\n    environment: backstage\n""" >> /kratix/metadata/destination-selectors.yaml\n')),(0,r.kt)("p",null,"This results in the instance being shown in Backstage:"),(0,r.kt)("img",{src:(0,o.Z)("/img/docs/backstage-resource.png")}),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("p",null,"Having difficulties with Backstage and Kratix? Get in touch with us at\n",(0,r.kt)("a",{parentName:"p",href:"mailto:feedback@syntasso.io?subject=Kratix%20Feedback"},"feedback@syntasso.io")," or\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/syntasso/kratix/issues/new"},"open a GitHub Issue"),"."))}m.isMDXComponent=!0}}]);