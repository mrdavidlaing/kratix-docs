"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[4402],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),m=a,h=l["".concat(c,".").concat(m)]||l[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3526:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={description:"Documentation for the Kratix GitStateStore Custom Resource",title:"GitStateStore",sidebar_label:"GitStateStore",id:"gitstatestore"},i="GitStateStore",s={unversionedId:"main/reference/statestore/gitstatestore",id:"main/reference/statestore/gitstatestore",title:"GitStateStore",description:"Documentation for the Kratix GitStateStore Custom Resource",source:"@site/docs/main/05-reference/06-statestore/02-gitstatestore.md",sourceDirName:"main/05-reference/06-statestore",slug:"/main/reference/statestore/gitstatestore",permalink:"/docs/main/reference/statestore/gitstatestore",draft:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/06-statestore/02-gitstatestore.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Documentation for the Kratix GitStateStore Custom Resource",title:"GitStateStore",sidebar_label:"GitStateStore",id:"gitstatestore"},sidebar:"mainSidebar",previous:{title:"StateStores",permalink:"/docs/main/reference/statestore/intro"},next:{title:"BucketStateStore",permalink:"/docs/main/reference/statestore/bucketstatestore"}},c={},p=[{value:"Auth",id:"auth",level:2},{value:"GitHub",id:"github",level:3},{value:"GitLab",id:"gitlab",level:3}],u={toc:p};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gitstatestore"},"GitStateStore"),(0,a.kt)("p",null,"Kratix supports writing to Git repositories. See below for the API documentation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: platform.kratix.io/v1alpha1\nkind: GitStateStore\nmetadata:\n  name: default\n  namespace: default\nspec:\n  # The branch to write to: optional, defaults to main\n  branch: main\n  # The top-level path in the git repository to write to: optional\n  path: clusters/\n  # Required\n  secretRef:\n    # The name of the secret to use to authenticate: required\n    name: gitea-credentials\n  # The address of the git repository. If auth method is basic auth, use `http`/`https` format: required\n  url: https://github.com/syntasso/kratix-repo\n")),(0,a.kt)("h2",{id:"auth"},"Auth"),(0,a.kt)("p",null,"Kratix uses the credentials contained in the ",(0,a.kt)("inlineCode",{parentName:"p"},"secretRef")," to authenticate with the\nGit storage. Kratix currently supports using ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," to authenticate.\nThe secret should be in the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: # name\n  namespace: # namespace\ntype: Opaque\ndata:\n  username: # base64 encoded username\n  password: # base64 encoded password\n")),(0,a.kt)("p",null,"Kratix supports ",(0,a.kt)("strong",{parentName:"p"},"any")," Git provider that supports basic auth. Depending on the provider\nyou are using you may be able to use an access token in-place of an actual password.\nSee below for further details."),(0,a.kt)("h3",{id:"github"},"GitHub"),(0,a.kt)("p",null,"GitHub supports using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"person access tokens"),"\ninstead of user passwords for authenticating with GitHub. Create a personal access token\nwith read and write permissions to the repository. Populate the ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password"),"\nfields with the GitHub username and token value."),(0,a.kt)("h3",{id:"gitlab"},"GitLab"),(0,a.kt)("p",null,"GitLab supports using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html"},"project access tokens"),"\ninstead of user passwords for authenticating with GitLab. Create a project access token\nwith read and write permissions to the repository. The token is created on the project, and is therefore\nnot related to any individual user. Populate the ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," field with any value and\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," field with the token value."),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Require a different method of authentication? Get in touch with us at\n",(0,a.kt)("a",{parentName:"p",href:"mailto:feedback@syntasso.io?subject=Kratix%20Feedback"},"feedback@syntasso.io"),"\nor ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/syntasso/kratix/issues/new"},"open a GitHub Issue"),"."))}l.isMDXComponent=!0}}]);