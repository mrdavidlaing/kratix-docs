"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[293],{7934:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=s(5893),a=s(1151);const i={title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",sidebar_label:"SKE Backstage Generator"},o=void 0,r={id:"ske/backstage/generator",title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",source:"@site/docs/ske/01-backstage/03-generator.mdx",sourceDirName:"ske/01-backstage",slug:"/ske/backstage/generator",permalink:"/ske/backstage/generator",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/01-backstage/03-generator.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",sidebar_label:"SKE Backstage Generator"},sidebar:"skeSidebar",previous:{title:"Configuring the Plugins",permalink:"/ske/backstage/plugins"},next:{title:"YAML File Format",permalink:"/ske/backstage/yaml-file-format"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"SKE Backstage plugins",id:"ske-backstage-plugins",level:3},{value:"Backstage Destination",id:"destination",level:3},{value:"How does it work?",id:"how-does-it-work",level:2},{value:"Promise Configure",id:"promise-configure",level:3},{value:"Resource Configure",id:"resource-configure",level:3},{value:"Accessing the SKE Generator image",id:"accessing-the-ske-generator-image",level:2},{value:"Using the image in your Workflows",id:"using-the-image-in-your-workflows",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The SKE Backstage Generator provides automated generation of the necessary Template and\nComponent manifests for your Promises and requested Resources."}),"\n",(0,t.jsx)(n.p,{children:"These manifests are read by Backstage and are designed to work seamlessly with the\nSKE Backstage plugins."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.h3,{id:"ske-backstage-plugins",children:"SKE Backstage plugins"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ske-backstage-generator"})," uses an action from the ",(0,t.jsx)(n.code,{children:"ske-backend"})," Backstage plugin.\nThis action is used within the generated Template to create a Resource Request.\nThe generated Components are also used by the ",(0,t.jsx)(n.code,{children:"ske-frontend"})," Backstage plugin to display\nPromise and Resource metadata."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to utilise the Templates and Components, you should also install both the\n",(0,t.jsx)(n.code,{children:"ske-backend"})," and ",(0,t.jsx)(n.code,{children:"ske-frontend"})," plugins into your Backstage instance."]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"./plugins",children:"Configuring the Plugins"})," for instructions."]}),"\n",(0,t.jsx)(n.h3,{id:"destination",children:"Backstage Destination"}),"\n",(0,t.jsxs)(n.p,{children:["You must have a Destination created with the ",(0,t.jsx)(n.code,{children:"environment: backstage"})," label. See the\n",(0,t.jsx)(n.a,{href:"./configuring-backstage#configure-a-destination-for-backstage",children:"Kratix Backstage docs"}),"\nfor setup instructions."]}),"\n",(0,t.jsx)(n.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ske-backstage-generator"})," image is intended to be run as part of your Configure\nPipeline for your Promise and Resource Workflows. It will auto-generate Backstage Template\nand Component manifests, and schedule them to your ",(0,t.jsx)(n.a,{href:"#destination",children:"Backstage Destination"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"promise-configure",children:"Promise Configure"}),"\n",(0,t.jsx)(n.p,{children:"In a Promise Configure workflow, two Backstage manifests will be generated:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Promise Component:"})," A Backstage Component representing the Promise."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Promise Template:"})," A Backstage Template representing the Promise API (i.e. the CRD\nfor Resources created fromt this Promise)."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.a,{href:"./yaml-file-format",children:"YAML File Format"})," for examples of these manifests."]}),"\n",(0,t.jsx)(n.h3,{id:"resource-configure",children:"Resource Configure"}),"\n",(0,t.jsx)(n.p,{children:"In a Resource Configure workflow, a single Backstage manifest will be generated:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Component:"})," A Backstage Component representing the Resource."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.a,{href:"./yaml-file-format",children:"YAML File Format"})," for examples of these manifests."]}),"\n",(0,t.jsx)(n.h2,{id:"accessing-the-ske-generator-image",children:"Accessing the SKE Generator image"}),"\n",(0,t.jsx)(n.p,{children:"The image is hosted in a private registry. To access the image, you will need to\nauthenticate using the token you have been provided with. For docker, you can\nrun the following command, providing your token as the password when prompted:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker login ghcr.io --username syntasso-pkg\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you are using a different container engine, follow the docs for your specific\ntool."}),"\n",(0,t.jsx)(n.p,{children:"Once you have authenticated, you should be able to pull the image:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker pull ghcr.io/syntasso/ske-backstage-generator:v0.1.0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Your Kubernetes cluster must have permission to ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/containers/images/#configuring-nodes-to-authenticate-to-a-private-registry",children:"pull this image from the\nprivate\nregistry"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If you are following the ",(0,t.jsx)(n.a,{href:"/main/quick-start",children:"quick-start guide"}),", you can load the image\ndirectly to the Kubernetes cache. Different tools have different commands for this. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# For minikube\nminikube image load ghcr.io/syntasso/ske-backstage-generator:v0.1.0\n\n# For KinD\nkind load docker-image ghcr.io/syntasso/ske-backstage-generator:v0.1.0\n"})}),"\n",(0,t.jsx)(n.p,{children:"For other tools, follow their specific documentation."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"If your cluster is running in a secure environment, you may wish to pull this image and\npush it to an internal registry which your cluster has permission to pull from."})}),"\n",(0,t.jsx)(n.h2,{id:"using-the-image-in-your-workflows",children:"Using the image in your Workflows"}),"\n",(0,t.jsxs)(n.p,{children:["To use the ",(0,t.jsx)(n.code,{children:"ske-backstage-generator"})," image, update your Promise definition to include the\ngenerator as a workflow step for both the Promise Configure and Resource Configure\nworkflows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="workflows section in a Promise file"',children:"  ...\n  workflows:\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          #highlight-start\n          - image: ghcr.io/syntasso/ske-backstage-generator:v0.1.0\n            name: ske-backstage-generator\n          #highlight-end\n    resource:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: instance-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-configure-pipeline\n          #highlight-start\n          - image: ghcr.io/syntasso/ske-backstage-generator:v0.1.0\n            name: ske-backstage-generator\n          #highlight-end\n"})}),"\n",(0,t.jsx)(n.p,{children:"Once your Promise is updated, the generator will be run as part of your\nWorkflows. If you install the Promise, you should see a Component automatically\nappearing in your Backstage instance, together with a new Template. If you use\nthe Template to create a Resource, you should see the resource Component\nappearing as well as the Resource itself being created in your cluster."})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>o});var t=s(7294);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);