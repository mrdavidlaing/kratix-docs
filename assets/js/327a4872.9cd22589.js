"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[9624],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3912:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={description:"Documentation for the Kratix BucketStateStore Custom Resource",title:"BucketStateStore",sidebar_label:"BucketStateStore",id:"bucketstatestore"},i="BucketStateStore",s={unversionedId:"main/reference/statestore/bucketstatestore",id:"main/reference/statestore/bucketstatestore",title:"BucketStateStore",description:"Documentation for the Kratix BucketStateStore Custom Resource",source:"@site/docs/main/05-reference/02-statestore/03-bucketstatestore.md",sourceDirName:"main/05-reference/02-statestore",slug:"/main/reference/statestore/bucketstatestore",permalink:"/docs/main/reference/statestore/bucketstatestore",draft:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/02-statestore/03-bucketstatestore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Documentation for the Kratix BucketStateStore Custom Resource",title:"BucketStateStore",sidebar_label:"BucketStateStore",id:"bucketstatestore"},sidebar:"mainSidebar",previous:{title:"GitStateStore",permalink:"/docs/main/reference/statestore/gitstatestore"},next:{title:"Destinations",permalink:"/docs/main/reference/destinations/intro"}},c={},u=[{value:"S3-Compatible Providers",id:"s3-compatible-providers",level:3},{value:"Auth",id:"auth",level:2},{value:"Access Key",id:"access-key",level:3},{value:"IAM",id:"iam",level:3}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"bucketstatestore"},"BucketStateStore"),(0,r.kt)("p",null,"Kratix supports writing to S3-Compatible buckets. See below for the API documentation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: platform.kratix.io/v1alpha1\nkind: BucketStateStore\nmetadata:\n  name: default\nspec:\n  # Bucket name: required\n  bucketName: kratix\n  # The endpoint of the bucket provider: required\n  endpoint: s3.eu-west-2.amazonaws.com\n  # Skip TLS veritfication: optional, defaults to false\n  insecure: false\n  # The Top-level path in the Bucket repository to write to: optional\n  path: destinations/\n  # Valid options: accessKey, and IAM; defaults to accessKey\n  authMethod: accessKey\n  # Required when using accessKey auth method\n  secretRef:\n    # The name and namespace of the secret to use to authenticate \n    name: s3-credentials\n    namespace: default\n")),(0,r.kt)("h3",{id:"s3-compatible-providers"},"S3-Compatible Providers"),(0,r.kt)("p",null,"Any S3-Compatible provider will work with Kratix. See the documentation on how\nto use some of the available providers below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html"},"AWS S3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://cloud.google.com/storage/docs/interoperability"},"GCS S3-compatible storage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://min.io/docs/minio/linux/reference/minio-mc/mc-mb.html"},"MinIO"))),(0,r.kt)("p",null,"For other providers see there documentation for setting up the bucket and credentials."),(0,r.kt)("h2",{id:"auth"},"Auth"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".spec.authMethod")," key is used to determine which authentication method\nshould be used when communicating to the S3-Compatible API. There are two\nsupports types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accessKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IAM"))),(0,r.kt)("h3",{id:"access-key"},"Access Key"),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"authMethod: accessKey")," is set Kratix uses the credentials contained in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"secretRef")," to authenticate with the S3-Compatible Bucket. The secret must\ncontain ",(0,r.kt)("inlineCode",{parentName:"p"},"accessKeyID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"secretAccessKey"),". Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\napiVersion: platform.kratix.io/v1alpha1\nkind: BucketStateStore\nmetadata:\n  name: default\nspec:\n  endpoint: minio.kratix-platform-system.svc.cluster.local\n  insecure: true\n  bucketName: kratix\n  secretRef:\n    name: minio-credentials\n    namespace: default\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: minio-credentials\n  namespace: default\ntype: Opaque\ndata:\n  accessKeyID: <base64 encoded accessKeyID>\n  secretAccessKey: <base64 encoded secretAccessKey>\n")),(0,r.kt)("h3",{id:"iam"},"IAM"),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"authMethod: IAM")," is set, Kratix will assume that the place in which it's\nrunning has been given permissions to authenticate with the S3 API using its\nIAM Role. In practise, this might mean that you are running Kratix in AWS, and that\nthe node role for the instance Kratix is running on has been given permissions\nto read/write to the bucket. Similarly, rather than giving the node role\npermissions, you may be using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"},"IAM Roles for\nServiceAccounts"),"\nto give permissions to just the Kratix container. With both approaches the\nconfiguration for the State store is the same:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\napiVersion: platform.kratix.io/v1alpha1\nkind: BucketStateStore\nmetadata:\n  name: default\nspec:\n  bucketName: kratix-example-test\n  endpoint: s3.eu-west-2.amazonaws.com # ensure to change with your bucket region.\n  insecure: false\n  authMethod: IAM\n")),(0,r.kt)("p",null,"When running in EKS you need to ensure your security group rules allow Kratix to\naccess the S3 API. If you are running the cluster in a restrictred setup you can\ngrant the access to just the S3 API using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-s3.html"},"gateway VPC\nendpoints")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Require a different method of authentication? Get in touch with us at\n",(0,r.kt)("a",{parentName:"p",href:"mailto:feedback@syntasso.io?subject=Kratix%20Feedback"},"feedback@syntasso.io"),"\nor ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/syntasso/kratix/issues/new"},"open a GitHub Issue"),"."))}p.isMDXComponent=!0}}]);