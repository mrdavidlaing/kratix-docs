"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[1038],{4986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=n(5893),o=n(1151);const i={title:"Resource Status",sidebar_label:"Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field"},a="Status",r={id:"main/reference/resources/status",title:"Resource Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field",source:"@site/docs/main/05-reference/05-resources/04-status.md",sourceDirName:"main/05-reference/05-resources",slug:"/main/reference/resources/status",permalink:"/docs/main/reference/resources/status",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/05-resources/04-status.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Resource Status",sidebar_label:"Status",description:"Documentation on how to expose information from the Pipeline to the Platform user through the Resource Status field"},sidebar:"mainSidebar",previous:{title:"Deleting",permalink:"/docs/main/reference/resources/delete"},next:{title:"Updates",permalink:"/docs/main/reference/resources/updates"}},c={},l=[{value:"Conditions",id:"conditions",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"status",children:"Status"}),"\n",(0,s.jsxs)(t.p,{children:["As part of your ",(0,s.jsx)(t.code,{children:"configure"})," Pipeline you can optionally send information about the Resource\nback to the resource requester by writing information to\n",(0,s.jsx)(t.code,{children:"/kratix/metadata/status.yaml"}),". The file can contain arbitrary key values, with the\n",(0,s.jsx)(t.code,{children:"message"})," key being a special key that is communicated back to the user when\nrunning ",(0,s.jsx)(t.code,{children:"kubectl get <resource-request>"}),". For example if the Pipeline container wrote the\nfollowing to the ",(0,s.jsx)(t.code,{children:"/kratix/metadata/status.yaml"})," file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"message: Resource provisioned with database size 10Gb\nconnectionDetails:\n  host: example.com\n  dbName: root\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Kratix would pickup the status and apply it back to the Resource. The\nuser would see the following when using ",(0,s.jsx)(t.code,{children:"kubectl"})," to ",(0,s.jsx)(t.code,{children:"get"})," the Resource details:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"kubectl get database\nNAME                   STATUS\nexample                Resource provisioned with database size 10Gb\n"})}),"\n",(0,s.jsxs)(t.p,{children:["And if the requester inspected the full status output using ",(0,s.jsx)(t.code,{children:"kubectl get database example -o yaml"}),", they would see all additional status keys:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"apiVersion: example.promise.syntasso.io/v1\nkind: Database\n# ...\nstatus:\n  message: Resource provisioned with database size 10Gb\n  connectionDetails:\n    host: example.com\n    dbName: root\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Status provides a simple way to communicate information back to the resource\nrequester. Kratix will automatically inject the required fields for status into\nthe ",(0,s.jsx)(t.code,{children:"api"}),", you do not have to manually add these fields."]}),"\n",(0,s.jsxs)(t.p,{children:["Status can also be used as a method of communicating information back to the\n",(0,s.jsx)(t.code,{children:"delete"})," pipeline, such as the name of any external resources imperatively\ncreated in the pipeline that need to be deleted as part of the delete pipeline"]}),"\n",(0,s.jsx)(t.h2,{id:"conditions",children:"Conditions"}),"\n",(0,s.jsxs)(t.p,{children:["Kratix follows the Kubernetes convention of using\n",(0,s.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-states",children:"conditions"}),"\nto convey the status of a resource and to allow programmatic interactions. When\na Resource is requested the ",(0,s.jsx)(t.code,{children:"PipelineCompleted"})," condition will be set. The\n",(0,s.jsx)(t.code,{children:"status"})," for the Pipeline will be ",(0,s.jsx)(t.code,{children:"False"})," until the Pipeline is completed. For\nexample when a Resource is requested for the first time the status will\nlook like:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'status:\n  conditions:\n    - lastTransitionTime: "2023-03-07T15:50:22Z"\n      message: Pipeline has not completed\n      reason: PipelineNotCompleted\n      status: "False"\n      type: PipelineCompleted\n'})}),"\n",(0,s.jsx)(t.p,{children:"once the Pipeline has been completed it will look like:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'status:\n  conditions:\n    - lastTransitionTime: "2023-03-07T15:50:30Z"\n      message: Pipeline completed\n      reason: PipelineExecutedSuccessfully\n      status: "True"\n      type: PipelineCompleted\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Conditions can be used by external systems to programmatically check when a\nResource Workflow has been completed. ",(0,s.jsx)(t.code,{children:"kubectl"})," also has built-in support\nfor waiting for a condition to be met. For example after requesting a Resource\na user can run the following to have the CLI wait for the Workflow to be\ncompleted:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"kubectl wait redis/example --for=condition=PipelineCompleted --timeout=60s\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Once the condition is ",(0,s.jsx)(t.code,{children:"True"})," the command will exit."]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var s=n(7294);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);