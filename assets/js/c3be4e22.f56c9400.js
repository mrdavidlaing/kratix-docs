"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[146],{2386:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(5893),a=n(1151);const r={description:"Documentation for the Kratix `GitStateStore`` Custom Resource",title:"GitStateStore",sidebar_label:"GitStateStore",id:"gitstatestore"},i="GitStateStore",o={id:"main/reference/statestore/gitstatestore",title:"GitStateStore",description:"Documentation for the Kratix `GitStateStore`` Custom Resource",source:"@site/docs/main/05-reference/02-statestore/02-gitstatestore.md",sourceDirName:"main/05-reference/02-statestore",slug:"/main/reference/statestore/gitstatestore",permalink:"/docs/main/reference/statestore/gitstatestore",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-reference/02-statestore/02-gitstatestore.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Documentation for the Kratix `GitStateStore`` Custom Resource",title:"GitStateStore",sidebar_label:"GitStateStore",id:"gitstatestore"},sidebar:"mainSidebar",previous:{title:"State Stores",permalink:"/docs/main/reference/statestore/intro"},next:{title:"BucketStateStore",permalink:"/docs/main/reference/statestore/bucketstatestore"}},c={},d=[{value:"Auth",id:"auth",level:2},{value:"GitHub",id:"github",level:3},{value:"GitLab",id:"gitlab",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"gitstatestore",children:"GitStateStore"}),"\n",(0,s.jsx)(t.p,{children:"Kratix supports writing to Git repositories. See below for the API documentation:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: GitStateStore\nmetadata:\n  name: default\nspec:\n  # The branch to write to: optional, defaults to main\n  branch: main\n  # The top-level path in the git repository to write to: optional\n  path: destinations/\n  # Required\n  secretRef:\n    # The name and namespace of the secret to use to authenticate: required\n    name: gitea-credentials\n    namespace: default\n  # The address of the git repository. If auth method is basic auth, use `http`/`https` format: required\n  url: https://github.com/syntasso/kratix-repo\n"})}),"\n",(0,s.jsx)(t.h2,{id:"auth",children:"Auth"}),"\n",(0,s.jsxs)(t.p,{children:["Kratix uses the credentials contained in the ",(0,s.jsx)(t.code,{children:"secretRef"})," to authenticate with the\nGit storage. Kratix currently supports using ",(0,s.jsx)(t.code,{children:"username"})," and ",(0,s.jsx)(t.code,{children:"password"})," to authenticate.\nThe secret should be in the following format:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: # name\n  namespace: # namespace\ntype: Opaque\ndata:\n  username: # base64 encoded username\n  password: # base64 encoded password\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Kratix supports ",(0,s.jsx)(t.strong,{children:"any"})," Git provider that supports basic auth. Depending on the provider\nyou are using you may be able to use an access token in-place of an actual password.\nSee below for further details."]}),"\n",(0,s.jsx)(t.h3,{id:"github",children:"GitHub"}),"\n",(0,s.jsxs)(t.p,{children:["GitHub supports using ",(0,s.jsx)(t.a,{href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",children:"person access tokens"}),"\ninstead of user passwords for authenticating with GitHub. Create a personal access token\nwith read and write permissions to the repository. Populate the ",(0,s.jsx)(t.code,{children:"username"})," and ",(0,s.jsx)(t.code,{children:"password"}),"\nfields with the GitHub username and token value."]}),"\n",(0,s.jsx)(t.h3,{id:"gitlab",children:"GitLab"}),"\n",(0,s.jsxs)(t.p,{children:["GitLab supports using ",(0,s.jsx)(t.a,{href:"https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html",children:"project access tokens"}),"\ninstead of user passwords for authenticating with GitLab. Create a project access token\nwith read and write permissions to the repository. The token is created on the project, and is therefore\nnot related to any individual user. Populate the ",(0,s.jsx)(t.code,{children:"username"})," field with any value and\nthe ",(0,s.jsx)(t.code,{children:"password"})," field with the token value."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Require a different method of authentication? Get in touch with us at\n",(0,s.jsx)(t.a,{href:"mailto:feedback@syntasso.io?subject=Kratix%20Feedback",children:"feedback@syntasso.io"}),"\nor ",(0,s.jsx)(t.a,{href:"https://github.com/syntasso/kratix/issues/new",children:"open a GitHub Issue"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>i});var s=n(7294);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);